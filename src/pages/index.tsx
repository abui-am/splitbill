import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "~/utils/api";
import Layout from "~/components/Layout";
import TextField from "~/components/input/TextField";
import { FormikProvider, useFormik, useFormikContext } from "formik";
import { v4 } from "uuid";
import Button from "~/components/Button";
import { type People } from "~/types/people";
import PeopleForm from "~/components/form/PeopleForm";
import { formatToRupiah } from "~/utils/format";

const createEmptyPeopleForm = () => ({
  id: v4(),
  amount: undefined,
  name: undefined,
});

export type CreateBillForm = {
  peoples: People[];
};
const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });
  const formik = useFormik<CreateBillForm>({
    initialValues: {
      peoples: [createEmptyPeopleForm()],
    },
    onSubmit: (values) => {
      alert(JSON.stringify(values, null, 2));
    },
  });
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <FormikProvider value={formik}>
          <form>
            {formik.values?.peoples?.map((people, index) => (
              <div className="mb-6 rounded-lg border p-4" key={people.id}>
                <PeopleForm people={people} name="peoples" index={index} />
              </div>
            ))}

            <Button
              variant="outlined"
              type="button"
              onClick={() => {
                void formik.setFieldValue("peoples", [
                  ...formik.values.peoples,
                  createEmptyPeopleForm(),
                ]);
              }}
            >
              Tambah orang
            </Button>

            <div className="sticky bottom-0 -mx-4">
              <SubmitBill />
            </div>
          </form>
        </FormikProvider>
      </Layout>
    </>
  );
};

const SubmitBill = () => {
  const formik = useFormikContext<CreateBillForm>();

  const total = formik.values?.peoples?.reduce(
    (prev, curr) => (prev ?? 0) + (curr?.amount ?? 0),
    0
  );
  return (
    <div className="rounded-t-lg bg-white p-4">
      <div className="mb-2">
        <label className="block">Total bersih:</label>
        <span className="text-xl font-medium">{formatToRupiah(total)}</span>
      </div>
      <Button>Buat Bill</Button>
    </div>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
